/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import BaseDatos.BaseDatos;
import BaseDatos.Values;
import Clases.Marca;
import Clases.MarcaList;
import Renders.ControlCaracteres;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Manuel Cañamaque
 */
public class EditarMarca extends javax.swing.JPanel {
    boolean conDatos;
    Marca marca;
    /**
     * Creates new form EditarMarca
     */
    public EditarMarca(boolean conDatos) {
        initComponents();
        this.conDatos=conDatos;
        
        //Obtenemos la Marca seleccionada
        marca = MarcaList.getMarcaAt(Main.getRowSelected());
        
        //Asignar Documents a los campos de texto.
        jTextField1.setDocument(new ControlCaracteres(Values.nombre_Marca));
        
        //Rellenamos los jTextFields si es para editar
        if(conDatos){
            jTextField1.setText(marca.getNombre());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        boton_Guardar_Marca = new javax.swing.JButton();
        boton_Cancelar_Marca = new javax.swing.JButton();

        jLabel1.setText("Nombre:");

        jTextField1.setColumns(10);

        boton_Guardar_Marca.setText("Guardar");
        boton_Guardar_Marca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_Guardar_MarcaActionPerformed(evt);
            }
        });

        boton_Cancelar_Marca.setText("Cancelar");
        boton_Cancelar_Marca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_Cancelar_MarcaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boton_Guardar_Marca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton_Cancelar_Marca)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_Guardar_Marca)
                    .addComponent(boton_Cancelar_Marca))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void boton_Cancelar_MarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_Cancelar_MarcaActionPerformed
        int result = JOptionPane.showConfirmDialog(this, 
        "¿Está seguro de que desea salir sin guardar los cambios?","Salir sin guardar", JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){ 
            SwingUtilities.getWindowAncestor(this).setVisible(false);
            SwingUtilities.getWindowAncestor(this).dispose();
        }
    }//GEN-LAST:event_boton_Cancelar_MarcaActionPerformed

    private void boton_Guardar_MarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_Guardar_MarcaActionPerformed
        boolean correcto=true;
        // Comenzamos una nueva transaccion si no hay ninguna activa
        if(!BaseDatos.entityManager.getTransaction().isActive()){
            BaseDatos.entityManager.getTransaction().begin();
        }
        //Comprobamos que los campos no estan vacios.
        if("".equals(jTextField1.getText())){
            correcto=false;
        }else{            
            //Si es para editar, asignamos los valores a la categoria.
            if(conDatos){
                marca.setNombre(jTextField1.getText());               
                BaseDatos.entityManager.merge(marca);
            }else{
                //Si es una nueva marca, la creamos, le cambiamos los datos y la guardamos
                Marca marcaNueva = new Marca();
                marcaNueva.setNombre(jTextField1.getText());
                BaseDatos.entityManager.persist(marcaNueva);
                MarcaList.addMarca(marcaNueva);
            }
        }
        //Si todo esta correcto, confirmamos la transaccion ,informamos al tableModel de los cambios
        // y cerramos la ventana
        if(correcto){    
            BaseDatos.entityManager.getTransaction().commit();            
            BaseDatos.entityManager.getTransaction().begin();

            if(conDatos){
                //Informamos de que se ha editado una fila
                Main.modelosTablas[3].fireTableRowsUpdated(Main.rowSelected, Main.rowSelected);                    
            }else{
                //Informamos de que se ha insertado una fila nueva y la seleccionamos por defecto
                Main.modelosTablas[3].fireTableRowsInserted(MarcaList.size()-1, MarcaList.size()-1);
                Main.tablas[3].setRowSelectionInterval(MarcaList.size()-1, MarcaList.size()-1);
            }
            //Llamamos al JDialog padre y lo cerramos.
            SwingUtilities.getWindowAncestor(this).setVisible(false);
            SwingUtilities.getWindowAncestor(this).dispose();
        }else{
            //Si no son correctos los datos, deshacemos los cambios e informamos al usuario
            BaseDatos.entityManager.getTransaction().rollback();
            BaseDatos.entityManager.getTransaction().begin();
            JOptionPane.showMessageDialog(this, "No se han podido guardar los datos, compruebe los campos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_boton_Guardar_MarcaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_Cancelar_Marca;
    private javax.swing.JButton boton_Guardar_Marca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
