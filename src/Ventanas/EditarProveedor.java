/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import BaseDatos.BaseDatos;
import BaseDatos.Values;
import Clases.Proveedor;
import Clases.ProveedorList;
import Renders.ControlCaracteres;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Manuel Cañamaque
 */
public class EditarProveedor extends javax.swing.JPanel {
    boolean conDatos;
    Proveedor proveedor;
    /**
     * Creates new form EditarProveedor
     */
    public EditarProveedor(boolean conDatos) {
        initComponents();
        this.conDatos=conDatos;
        
        //Obtenemos el Proveedor seleccionado
        proveedor = ProveedorList.getProveedorAt(Main.getRowSelected());
        
        //Asignar Documents a los campos de texto.
        jTextField1.setDocument(new ControlCaracteres(Values.nombre_Proveedor));        
        jTextField2.setDocument(new ControlCaracteres(Values.nif_Proveedor));
        jTextField3.setDocument(new ControlCaracteres(Values.direccion_Proveedor));
        jTextField4.setDocument(new ControlCaracteres(Values.telefono_Proveedor));
        
        //Rellenamos los jTextFields si es para editar
        if(conDatos){
            jTextField1.setText(proveedor.getNombre());
            jTextField2.setText(proveedor.getNif());
            jTextField3.setText(proveedor.getDireccion());
            jTextField4.setText(""+proveedor.getTelefono());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        boton_Guardar_Proveedor = new javax.swing.JButton();
        boton_Cancelar_Proveedor = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();

        jLabel1.setText("Nombre:");

        jTextField1.setColumns(10);

        boton_Guardar_Proveedor.setText("Guardar");
        boton_Guardar_Proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_Guardar_ProveedorActionPerformed(evt);
            }
        });

        boton_Cancelar_Proveedor.setText("Cancelar");
        boton_Cancelar_Proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_Cancelar_ProveedorActionPerformed(evt);
            }
        });

        jLabel2.setText("Nif:");

        jLabel3.setText("Dirección:");

        jLabel4.setText("Telefono:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boton_Guardar_Proveedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(boton_Cancelar_Proveedor))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)
                            .addComponent(jTextField4)
                            .addComponent(jTextField3))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_Guardar_Proveedor)
                    .addComponent(boton_Cancelar_Proveedor))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void boton_Cancelar_ProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_Cancelar_ProveedorActionPerformed
        int result = JOptionPane.showConfirmDialog(this, 
        "¿Está seguro de que desea salir sin guardar los cambios?","Salir sin guardar", JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){ 
            SwingUtilities.getWindowAncestor(this).setVisible(false);
            SwingUtilities.getWindowAncestor(this).dispose();
        }
    }//GEN-LAST:event_boton_Cancelar_ProveedorActionPerformed

    private void boton_Guardar_ProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_Guardar_ProveedorActionPerformed
        boolean correcto=true;
        // Comenzamos una nueva transaccion si no hay ninguna activa
        if(!BaseDatos.entityManager.getTransaction().isActive()){
            BaseDatos.entityManager.getTransaction().begin();
        }
        //Comprobamos que los campos no estan vacios.
        if("".equals(jTextField1.getText()) || "".equals(jTextField3.getText())
            || jTextField2.getText().length()!=9 || "".equals(jTextField4.getText())){
            correcto=false;
        }else{
            int telefono = 0;
            try {
                telefono = Integer.valueOf(jTextField4.getText());
            } catch (NumberFormatException e) {
                correcto=false;        
            }
            //Si es para editar, asignamos los valores al articulo.
            if(conDatos){
                proveedor.setNombre(jTextField1.getText());
                proveedor.setNif(jTextField2.getText());
                proveedor.setDireccion(jTextField3.getText());
                proveedor.setTelefono(telefono);
                BaseDatos.entityManager.merge(proveedor);
            }else{
                //Si es un proveedor nuevo, lo creamos, le cambiamos los datos y lo guardamos
                Proveedor proveedorNuevo = new Proveedor();
                proveedorNuevo.setNombre(jTextField1.getText());
                proveedorNuevo.setNif(jTextField2.getText());
                proveedorNuevo.setDireccion(jTextField3.getText());
                proveedorNuevo.setTelefono(telefono);
                BaseDatos.entityManager.persist(proveedorNuevo);
                ProveedorList.addProveedor(proveedorNuevo);
            }
        }
        //Si todo esta correcto, confirmamos la transaccion ,informamos al tableModel de los cambios
        // y cerramos la ventana
        if(correcto){    
            BaseDatos.entityManager.getTransaction().commit();            
            BaseDatos.entityManager.getTransaction().begin();

            if(conDatos){
                //Informamos de que se ha editado una fila
                Main.modelosTablas[1].fireTableRowsUpdated(Main.rowSelected, Main.rowSelected);                    
            }else{
                //Informamos de que se ha insertado una fila nueva y la seleccionamos por defecto
                Main.modelosTablas[1].fireTableRowsInserted(ProveedorList.size()-1, ProveedorList.size()-1);
                Main.tablas[1].setRowSelectionInterval(ProveedorList.size()-1, ProveedorList.size()-1);
            }
            //Llamamos al JDialog padre y lo cerramos.
            SwingUtilities.getWindowAncestor(this).setVisible(false);
            SwingUtilities.getWindowAncestor(this).dispose();
        }else{
            //Si no son correctos los datos, deshacemos los cambios e informamos al usuario
            BaseDatos.entityManager.getTransaction().rollback();
            BaseDatos.entityManager.getTransaction().begin();
            JOptionPane.showMessageDialog(this, "No se han podido guardar los datos, compruebe los campos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_boton_Guardar_ProveedorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_Cancelar_Proveedor;
    private javax.swing.JButton boton_Guardar_Proveedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
